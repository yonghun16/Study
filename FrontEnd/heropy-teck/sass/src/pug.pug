extends template/layout

block content
  //- 1. Script / Style 태그
  //- 다른 안에 쓰는 언어(js. css)쓰는 데 특별한 태그는 반드시 뒤에 점. 을 찍어주어야 인식된다.
  // HTML에 보이는 주석
  h1 1. Script / Style 태그
  style.
    h1 {
      font-size: 30px;
    }
  script.
    const message = 'Pug';
    //- alert(message);
  br
  


  //- 2. id/class 속성 입력
  //- div 같은 건 생략 가능
  h1 2. id/class 속성 입력
  #login-button 로그인 버튼
  // 보이나?
  .post-image
  span#highlight 
  p.hidden.full
  br 



  //- 3. Attributes(속성) 입력
  h1 3. Attributes(속성) 입력
  //- 1) 속성 하나 넣기
  a(href='google.com') Google 
  //- 2) 속성 여러개 넣기
  input(
    type='checkbox'
    name='agreement'
    checked
  )
  //- 3) 속성에 자바스크립트 맵핑
  div(
    class='div-class'
    onload='play()'
  ) 온-로드
  script.
    function play(){
      console.log(1);
    }
  //- 4) Boolean 속성 처리
  //- (|)은 공백 컨트롤
  input(type='checkbox' checked)
  |
  |
  input(type='checkbox' checked=true)
  |
  |
  input(type='checkbox' checked=false)
  //- 5) 클래스 변수
  - var classes = ['foo', 'bar', 'baz']
  a(class=classes)
  |
  |
  //- 클래스 변수를 앞에서 추가 뒤에서 추가 가능
  a.bang(class=classes class=['bing'])
  br 
  br


  //- 4. 텍스트 넣기
  h1 4. 텍스트 넣기
  p Welcome to Express
  button(type='submit') 전송
  p   
    | 안녕하세요. 
    | 여러 줄을 입력합니다. 
    br
    | 태그도 중간에 넣을 수 있습니다. 
  br   
  


  //- 5. 인라인 태그
  h1 5. 인라인 태그
  h2 Hello PUG !! 
    p hello 
      em world 
  h2 Hello PUG !!!
    p hello <em>world!</em> 
  br



  //- 6. PUG 변수 사용
  h1 6. PUG 변수 사용
  //- 1) 로컬 변수
  - const node = 'Node.js'
  - const js = 'Javascript'
  p #{node}와 #{js} 
  //- 2) 변수 렌더링
  h1= title
  p Welcome to #{title}
  br



  //- 7. PUG 조건문
  h1 7. PUG 조건문
  //- 1) if
  - var isLoggedIn = true 
  if isLoggedIn 
    div 로그인 되었습니다. 
  else 
    div 로그인이 필요합니다. 
  //- 2) case-when 문
  - var friends = 10
  case friends 
    when 0
      p you have no friends 
    when 1
      p you have a friend 
    default 
      p you have #{friends} friends
  br



  //- 8. PUG 반복문
  h1 8. PUG 반복문
  //- 1) each in 문
  ul 
    each val in [1, 2 ,3, 4, 5]
      li= val
  br
  ul 
    each val, index in ['zero', 'one', 'two']
      li= index + ': ' + val
  br
  ul 
    each val, index in {1:'one', 2:'two', 3:'three'}
      li= index + ': ' + val 
  br 
  //- 2) each in else 문 
  - var values = [1, 2, 3, 4];
  ul 
    each val in values.length ? values : ['There are no values']
      li= val
  br
  - var values = [];
  ul
    each val in values
      li= val
    else
      li There are no values
  br 
  //- 3) while
  - var n = 0;
  ul
    while n < 4
      li= n++